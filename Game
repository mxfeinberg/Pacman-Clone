package PacMan;
import java.awt.Canvas;
public class Game extends Canvas implements Runnable{
	private boolean running = false;
	private Thread thread;
	private PacMan pacman;
	private BufferedImage image = new BufferedImage(WIDTH,HEIGHT,BufferedImage(WIDTH,HEIGHT,BufferdImage.TYPE_INT_RGB);
	public void run(){
		long lastTime = System.nanoTime();
		final double ticks = 60;
		double nanoseconds = 1000000000 / ticks;
		double delta = 0;
		
		while(running){
			long now = System.nanoTime();
			delta += (lastTime - now) / nanoseconds;
			lastTime = now;
			if(delta > 1){
				tick();
				delta--;
			}
			render();
				
			}
		}
	}
	public void tick(){
		
	}
	public void render(){
		
	}
	public void start(){
		running = true;
		thread = new Thread(this);
		thread.start();
	}
	public void keyPressed(KeyEvent e)
	{
		int key = e.getKeyCode();
		if(key == KeyEvent.VK_LEFT)
		{
			pacman.setX(getX() - 1);
		}
		else if(key == KeyEvent.VK_RIGHT)
		{
			pacman.setX(getX() + 1);
		}
		else if(key == KeyEvent.VK_DOWN)
		{
			pacman.setY(getY() + 1);
		}
		else if(key == KeyEvent.VK_UP)
		{
			pacman.setY(getY() - 1);
		}
	}
	public void keyReleased(KeyEvent e)
	{
	}
	public static void main(String[] args){
		Game g = new Game();
		g.start();
	}
}
